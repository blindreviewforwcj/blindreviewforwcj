// Ability to ASA specialist counter attacks
<<Pnd,Ph1>>Pmax=? [ F (win_asa=1&rounds<=k) ]

// Ability to FSA specialist counter attacks
<<Pnd,Ph2>>Pmax=? [ F (win_fsa=1&rounds<=k) ]

// Ability to VPN specialist counter attacks
<<Pnd,Ph3>>Pmax=? [ F (win_vpn=1&rounds<=k) ]

// Ability to IPS specialist counter attacks
<<Pnd,Ph4>>Pmax=? [ F (win_ips=1&rounds<=k) ]

// Ability to Security specialists to counter attacks
<<Pnd,Ph1,Ph2,Ph3,Ph4>>Pmax=? [ F ("win"&rounds<=k) ]

// Ability to Attackers to fail the system
1-<<Pnd,Ph1,Ph2,Ph3,Ph4>>Pmax=? [ F ("win"&rounds<=k) ]

// Ability to Absolutely Attackers to fail the system
<<Pnd,Pat>>Pmax=? [ F ("fail"&rounds<=k) ]

// cummulative rewards to ASA specialist counter attacks
<<Pnd,Ph1>>R{"utilityASA"}max=? [ F rounds=k ]

// cummulative rewards to FSA specialist counter attacks
<<Pnd,Ph2>>R{"utilityFSA"}max=? [ F rounds=k ]

// cummulative rewards to VPN specialist counter attacks
<<Pnd,Ph3>>R{"utilityVPN"}max=? [ F rounds=k ]

// cummulative rewards to IPS specialist counter attacks
<<Pnd,Ph4>>R{"utilityIPS"}max=? [ F rounds=k ]

// cummulative rewards to specialist in countering attacks
<<Pnd,Ph1,Ph2,Ph3,Ph4>>R{"utilityWin"}max=? [ F rounds=k ]

// cummulative rewards to fail ASA specialist in countering attacks
<<Pnd,Pat>>R{"utilityASA"}max=? [ F rounds=k ]

// cummulative rewards to fail FSA specialist in countering attacks
<<Pnd,Pat>>R{"utilityFSA"}max=? [ F rounds=k ]

// cummulative rewards to fail VPN specialist in countering attacks
<<Pnd,Pat>>R{"utilityVPN"}max=? [ F rounds=k ]

// cummulative rewards to fail IPs specialist in countering attacks
<<Pnd,Pat>>R{"utilityIPS"}max=? [ F rounds=k ]

<<Pnd,Pat>>R{"utilityFail"}max=? [ F rounds=k ]

